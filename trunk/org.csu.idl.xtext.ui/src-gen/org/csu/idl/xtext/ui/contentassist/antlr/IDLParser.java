/*
* generated by Xtext
*/
package org.csu.idl.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.csu.idl.xtext.services.IDLGrammarAccess;

public class IDLParser extends AbstractContentAssistParser {
	
	@Inject
	private IDLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.csu.idl.xtext.ui.contentassist.antlr.internal.InternalIDLParser createParser() {
		org.csu.idl.xtext.ui.contentassist.antlr.internal.InternalIDLParser result = new org.csu.idl.xtext.ui.contentassist.antlr.internal.InternalIDLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDefinitionAccess().getAlternatives(), "rule__Definition__Alternatives");
					put(grammarAccess.getModuleAccess().getAlternatives_3(), "rule__Module__Alternatives_3");
					put(grammarAccess.getInterface_declAccess().getAlternatives_0(), "rule__Interface_decl__Alternatives_0");
					put(grammarAccess.getInterface_declAccess().getAlternatives_5(), "rule__Interface_decl__Alternatives_5");
					put(grammarAccess.getInterface_fwdAccess().getAlternatives_0(), "rule__Interface_fwd__Alternatives_0");
					put(grammarAccess.getExportAccess().getAlternatives(), "rule__Export__Alternatives");
					put(grammarAccess.getOp_declAccess().getAlternatives_1(), "rule__Op_decl__Alternatives_1");
					put(grammarAccess.getOp_type_specAccess().getAlternatives(), "rule__Op_type_spec__Alternatives");
					put(grammarAccess.getParam_declAccess().getAlternatives_1(), "rule__Param_decl__Alternatives_1");
					put(grammarAccess.getAttr_declAccess().getAlternatives(), "rule__Attr_decl__Alternatives");
					put(grammarAccess.getReadonly_attr_specAccess().getAlternatives(), "rule__Readonly_attr_spec__Alternatives");
					put(grammarAccess.getReadonly_attr_specAccess().getAlternatives_0_2(), "rule__Readonly_attr_spec__Alternatives_0_2");
					put(grammarAccess.getReadonly_attr_specAccess().getAlternatives_1_2(), "rule__Readonly_attr_spec__Alternatives_1_2");
					put(grammarAccess.getAttr_specAccess().getAlternatives(), "rule__Attr_spec__Alternatives");
					put(grammarAccess.getAttr_specAccess().getAlternatives_0_1(), "rule__Attr_spec__Alternatives_0_1");
					put(grammarAccess.getAttr_specAccess().getAlternatives_0_3(), "rule__Attr_spec__Alternatives_0_3");
					put(grammarAccess.getAttr_specAccess().getAlternatives_1_1(), "rule__Attr_spec__Alternatives_1_1");
					put(grammarAccess.getType_declAccess().getAlternatives(), "rule__Type_decl__Alternatives");
					put(grammarAccess.getAlias_typeAccess().getAlternatives(), "rule__Alias_type__Alternatives");
					put(grammarAccess.getAlias_typeAccess().getAlternatives_1_1(), "rule__Alias_type__Alternatives_1_1");
					put(grammarAccess.getArray_type_specAccess().getAlternatives_0(), "rule__Array_type_spec__Alternatives_0");
					put(grammarAccess.getSimple_type_specAccess().getAlternatives(), "rule__Simple_type_spec__Alternatives");
					put(grammarAccess.getBase_type_specAccess().getAlternatives(), "rule__Base_type_spec__Alternatives");
					put(grammarAccess.getTemplate_type_specAccess().getAlternatives(), "rule__Template_type_spec__Alternatives");
					put(grammarAccess.getConstr_type_specAccess().getAlternatives(), "rule__Constr_type_spec__Alternatives");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getUnion_typeAccess().getAlternatives_4(), "rule__Union_type__Alternatives_4");
					put(grammarAccess.getSwitch_type_spec_contAccess().getAlternatives(), "rule__Switch_type_spec_cont__Alternatives");
					put(grammarAccess.getCase_stmtAccess().getAlternatives(), "rule__Case_stmt__Alternatives");
					put(grammarAccess.getCase_stmtAccess().getAlternatives_0_0(), "rule__Case_stmt__Alternatives_0_0");
					put(grammarAccess.getCase_stmtAccess().getAlternatives_1_0(), "rule__Case_stmt__Alternatives_1_0");
					put(grammarAccess.getCase_stmtAccess().getAlternatives_1_1(), "rule__Case_stmt__Alternatives_1_1");
					put(grammarAccess.getConstr_forward_declAccess().getAlternatives(), "rule__Constr_forward_decl__Alternatives");
					put(grammarAccess.getConst_declAccess().getAlternatives_1(), "rule__Const_decl__Alternatives_1");
					put(grammarAccess.getConst_typeAccess().getAlternatives(), "rule__Const_type__Alternatives");
					put(grammarAccess.getPrimitive_defAccess().getAlternatives(), "rule__Primitive_def__Alternatives");
					put(grammarAccess.getSequence_typeAccess().getAlternatives_2(), "rule__Sequence_type__Alternatives_2");
					put(grammarAccess.getFloating_pt_typeAccess().getAlternatives(), "rule__Floating_pt_type__Alternatives");
					put(grammarAccess.getInteger_typeAccess().getAlternatives(), "rule__Integer_type__Alternatives");
					put(grammarAccess.getCharstr_typeAccess().getAlternatives(), "rule__Charstr_type__Alternatives");
					put(grammarAccess.getOther_typeAccess().getAlternatives(), "rule__Other_type__Alternatives");
					put(grammarAccess.getShift_exprAccess().getOperatorAlternatives_1_1_0(), "rule__Shift_expr__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAdd_exprAccess().getOperatorAlternatives_1_1_0(), "rule__Add_expr__OperatorAlternatives_1_1_0");
					put(grammarAccess.getMult_exprAccess().getOperatorAlternatives_1_1_0(), "rule__Mult_expr__OperatorAlternatives_1_1_0");
					put(grammarAccess.getUnary_exprAccess().getAlternatives(), "rule__Unary_expr__Alternatives");
					put(grammarAccess.getUnary_operatorAccess().getAlternatives(), "rule__Unary_operator__Alternatives");
					put(grammarAccess.getPrimary_exprAccess().getAlternatives(), "rule__Primary_expr__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getParam_attributeAccess().getAlternatives(), "rule__Param_attribute__Alternatives");
					put(grammarAccess.getSpecificationAccess().getGroup(), "rule__Specification__Group__0");
					put(grammarAccess.getInclude_declAccess().getGroup(), "rule__Include_decl__Group__0");
					put(grammarAccess.getDefinitionAccess().getGroup_0(), "rule__Definition__Group_0__0");
					put(grammarAccess.getDefinitionAccess().getGroup_1(), "rule__Definition__Group_1__0");
					put(grammarAccess.getDefinitionAccess().getGroup_2(), "rule__Definition__Group_2__0");
					put(grammarAccess.getDefinitionAccess().getGroup_3(), "rule__Definition__Group_3__0");
					put(grammarAccess.getDefinitionAccess().getGroup_4(), "rule__Definition__Group_4__0");
					put(grammarAccess.getDefinitionAccess().getGroup_5(), "rule__Definition__Group_5__0");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getInterface_declAccess().getGroup(), "rule__Interface_decl__Group__0");
					put(grammarAccess.getInterface_declAccess().getGroup_3(), "rule__Interface_decl__Group_3__0");
					put(grammarAccess.getInterface_declAccess().getGroup_3_2(), "rule__Interface_decl__Group_3_2__0");
					put(grammarAccess.getInterface_fwdAccess().getGroup(), "rule__Interface_fwd__Group__0");
					put(grammarAccess.getExportAccess().getGroup_0(), "rule__Export__Group_0__0");
					put(grammarAccess.getExportAccess().getGroup_1(), "rule__Export__Group_1__0");
					put(grammarAccess.getExportAccess().getGroup_2(), "rule__Export__Group_2__0");
					put(grammarAccess.getExportAccess().getGroup_3(), "rule__Export__Group_3__0");
					put(grammarAccess.getExportAccess().getGroup_4(), "rule__Export__Group_4__0");
					put(grammarAccess.getOp_declAccess().getGroup(), "rule__Op_decl__Group__0");
					put(grammarAccess.getOp_declAccess().getGroup_4(), "rule__Op_decl__Group_4__0");
					put(grammarAccess.getOp_declAccess().getGroup_4_1(), "rule__Op_decl__Group_4_1__0");
					put(grammarAccess.getOp_declAccess().getGroup_6(), "rule__Op_decl__Group_6__0");
					put(grammarAccess.getOp_declAccess().getGroup_6_3(), "rule__Op_decl__Group_6_3__0");
					put(grammarAccess.getOp_declAccess().getGroup_7(), "rule__Op_decl__Group_7__0");
					put(grammarAccess.getOp_declAccess().getGroup_7_3(), "rule__Op_decl__Group_7_3__0");
					put(grammarAccess.getOp_type_specAccess().getGroup_1(), "rule__Op_type_spec__Group_1__0");
					put(grammarAccess.getParam_declAccess().getGroup(), "rule__Param_decl__Group__0");
					put(grammarAccess.getReadonly_attr_specAccess().getGroup_0(), "rule__Readonly_attr_spec__Group_0__0");
					put(grammarAccess.getReadonly_attr_specAccess().getGroup_0_7(), "rule__Readonly_attr_spec__Group_0_7__0");
					put(grammarAccess.getReadonly_attr_specAccess().getGroup_1(), "rule__Readonly_attr_spec__Group_1__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0(), "rule__Attr_spec__Group_0__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_0(), "rule__Attr_spec__Group_0_3_0__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_0_3(), "rule__Attr_spec__Group_0_3_0_3__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_0_5(), "rule__Attr_spec__Group_0_3_0_5__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_0_5_3(), "rule__Attr_spec__Group_0_3_0_5_3__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_1(), "rule__Attr_spec__Group_0_3_1__0");
					put(grammarAccess.getAttr_specAccess().getGroup_0_3_1_3(), "rule__Attr_spec__Group_0_3_1_3__0");
					put(grammarAccess.getAttr_specAccess().getGroup_1(), "rule__Attr_spec__Group_1__0");
					put(grammarAccess.getExcept_declAccess().getGroup(), "rule__Except_decl__Group__0");
					put(grammarAccess.getType_declAccess().getGroup_4(), "rule__Type_decl__Group_4__0");
					put(grammarAccess.getAlias_typeAccess().getGroup_0(), "rule__Alias_type__Group_0__0");
					put(grammarAccess.getAlias_typeAccess().getGroup_1(), "rule__Alias_type__Group_1__0");
					put(grammarAccess.getArray_type_specAccess().getGroup(), "rule__Array_type_spec__Group__0");
					put(grammarAccess.getArray_type_specAccess().getGroup_2(), "rule__Array_type_spec__Group_2__0");
					put(grammarAccess.getStruct_typeAccess().getGroup(), "rule__Struct_type__Group__0");
					put(grammarAccess.getMemberAccess().getGroup_0(), "rule__Member__Group_0__0");
					put(grammarAccess.getMemberAccess().getGroup_1(), "rule__Member__Group_1__0");
					put(grammarAccess.getMemberAccess().getGroup_2(), "rule__Member__Group_2__0");
					put(grammarAccess.getMemberAccess().getGroup_3(), "rule__Member__Group_3__0");
					put(grammarAccess.getUnion_typeAccess().getGroup(), "rule__Union_type__Group__0");
					put(grammarAccess.getSwitch_type_spec_contAccess().getGroup_1(), "rule__Switch_type_spec_cont__Group_1__0");
					put(grammarAccess.getSwitch_type_spec_contAccess().getGroup_2(), "rule__Switch_type_spec_cont__Group_2__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_0(), "rule__Case_stmt__Group_0__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_0_0_0(), "rule__Case_stmt__Group_0_0_0__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_0_0_1(), "rule__Case_stmt__Group_0_0_1__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_1(), "rule__Case_stmt__Group_1__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_1_0_0(), "rule__Case_stmt__Group_1_0_0__0");
					put(grammarAccess.getCase_stmtAccess().getGroup_1_0_1(), "rule__Case_stmt__Group_1_0_1__0");
					put(grammarAccess.getEnum_typeAccess().getGroup(), "rule__Enum_type__Group__0");
					put(grammarAccess.getEnum_typeAccess().getGroup_4(), "rule__Enum_type__Group_4__0");
					put(grammarAccess.getConstr_forward_declAccess().getGroup_0(), "rule__Constr_forward_decl__Group_0__0");
					put(grammarAccess.getConstr_forward_declAccess().getGroup_1(), "rule__Constr_forward_decl__Group_1__0");
					put(grammarAccess.getConst_declAccess().getGroup(), "rule__Const_decl__Group__0");
					put(grammarAccess.getSequence_typeAccess().getGroup(), "rule__Sequence_type__Group__0");
					put(grammarAccess.getSequence_typeAccess().getGroup_3(), "rule__Sequence_type__Group_3__0");
					put(grammarAccess.getStringdef_typeAccess().getGroup(), "rule__Stringdef_type__Group__0");
					put(grammarAccess.getWide_stringdef_typeAccess().getGroup(), "rule__Wide_stringdef_type__Group__0");
					put(grammarAccess.getFixed_pt_typeAccess().getGroup(), "rule__Fixed_pt_type__Group__0");
					put(grammarAccess.getLongdouble_typeAccess().getGroup(), "rule__Longdouble_type__Group__0");
					put(grammarAccess.getLonglong_typeAccess().getGroup(), "rule__Longlong_type__Group__0");
					put(grammarAccess.getUshort_typeAccess().getGroup(), "rule__Ushort_type__Group__0");
					put(grammarAccess.getUlong_typeAccess().getGroup(), "rule__Ulong_type__Group__0");
					put(grammarAccess.getUlonglong_typeAccess().getGroup(), "rule__Ulonglong_type__Group__0");
					put(grammarAccess.getFixed_pt_const_typeAccess().getGroup(), "rule__Fixed_pt_const_type__Group__0");
					put(grammarAccess.getOr_exprAccess().getGroup(), "rule__Or_expr__Group__0");
					put(grammarAccess.getOr_exprAccess().getGroup_1(), "rule__Or_expr__Group_1__0");
					put(grammarAccess.getXor_exprAccess().getGroup(), "rule__Xor_expr__Group__0");
					put(grammarAccess.getXor_exprAccess().getGroup_1(), "rule__Xor_expr__Group_1__0");
					put(grammarAccess.getAnd_exprAccess().getGroup(), "rule__And_expr__Group__0");
					put(grammarAccess.getAnd_exprAccess().getGroup_1(), "rule__And_expr__Group_1__0");
					put(grammarAccess.getShift_exprAccess().getGroup(), "rule__Shift_expr__Group__0");
					put(grammarAccess.getShift_exprAccess().getGroup_1(), "rule__Shift_expr__Group_1__0");
					put(grammarAccess.getAdd_exprAccess().getGroup(), "rule__Add_expr__Group__0");
					put(grammarAccess.getAdd_exprAccess().getGroup_1(), "rule__Add_expr__Group_1__0");
					put(grammarAccess.getMult_exprAccess().getGroup(), "rule__Mult_expr__Group__0");
					put(grammarAccess.getMult_exprAccess().getGroup_1(), "rule__Mult_expr__Group_1__0");
					put(grammarAccess.getUnary_exprAccess().getGroup_0(), "rule__Unary_expr__Group_0__0");
					put(grammarAccess.getPrimary_exprAccess().getGroup_2(), "rule__Primary_expr__Group_2__0");
					put(grammarAccess.getSpecificationAccess().getIncludesAssignment_1(), "rule__Specification__IncludesAssignment_1");
					put(grammarAccess.getSpecificationAccess().getContainsAssignment_2(), "rule__Specification__ContainsAssignment_2");
					put(grammarAccess.getInclude_declAccess().getImportURIAssignment_1(), "rule__Include_decl__ImportURIAssignment_1");
					put(grammarAccess.getModuleAccess().getIdentifierAssignment_1(), "rule__Module__IdentifierAssignment_1");
					put(grammarAccess.getModuleAccess().getContainsAssignment_3_0(), "rule__Module__ContainsAssignment_3_0");
					put(grammarAccess.getInterface_declAccess().getIsAbstractAssignment_0_0(), "rule__Interface_decl__IsAbstractAssignment_0_0");
					put(grammarAccess.getInterface_declAccess().getIsCustomAssignment_0_1(), "rule__Interface_decl__IsCustomAssignment_0_1");
					put(grammarAccess.getInterface_declAccess().getIdentifierAssignment_2(), "rule__Interface_decl__IdentifierAssignment_2");
					put(grammarAccess.getInterface_declAccess().getDerivesFromAssignment_3_1(), "rule__Interface_decl__DerivesFromAssignment_3_1");
					put(grammarAccess.getInterface_declAccess().getDerivesFromAssignment_3_2_1(), "rule__Interface_decl__DerivesFromAssignment_3_2_1");
					put(grammarAccess.getInterface_declAccess().getContainsAssignment_5_0(), "rule__Interface_decl__ContainsAssignment_5_0");
					put(grammarAccess.getInterface_fwdAccess().getIdentifierAssignment_2(), "rule__Interface_fwd__IdentifierAssignment_2");
					put(grammarAccess.getOp_declAccess().getIsOnewayAssignment_0(), "rule__Op_decl__IsOnewayAssignment_0");
					put(grammarAccess.getOp_declAccess().getContainedTypeAssignment_1_0(), "rule__Op_decl__ContainedTypeAssignment_1_0");
					put(grammarAccess.getOp_declAccess().getSharedTypeAssignment_1_1(), "rule__Op_decl__SharedTypeAssignment_1_1");
					put(grammarAccess.getOp_declAccess().getIdentifierAssignment_2(), "rule__Op_decl__IdentifierAssignment_2");
					put(grammarAccess.getOp_declAccess().getParametersAssignment_4_0(), "rule__Op_decl__ParametersAssignment_4_0");
					put(grammarAccess.getOp_declAccess().getParametersAssignment_4_1_1(), "rule__Op_decl__ParametersAssignment_4_1_1");
					put(grammarAccess.getOp_declAccess().getCanRaiseAssignment_6_2(), "rule__Op_decl__CanRaiseAssignment_6_2");
					put(grammarAccess.getOp_declAccess().getCanRaiseAssignment_6_3_1(), "rule__Op_decl__CanRaiseAssignment_6_3_1");
					put(grammarAccess.getOp_declAccess().getContextsAssignment_7_2(), "rule__Op_decl__ContextsAssignment_7_2");
					put(grammarAccess.getOp_declAccess().getContextsAssignment_7_3_1(), "rule__Op_decl__ContextsAssignment_7_3_1");
					put(grammarAccess.getOp_type_specAccess().getKindAssignment_1_1(), "rule__Op_type_spec__KindAssignment_1_1");
					put(grammarAccess.getParam_declAccess().getDirectionAssignment_0(), "rule__Param_decl__DirectionAssignment_0");
					put(grammarAccess.getParam_declAccess().getContainedTypeAssignment_1_0(), "rule__Param_decl__ContainedTypeAssignment_1_0");
					put(grammarAccess.getParam_declAccess().getSharedTypeAssignment_1_1(), "rule__Param_decl__SharedTypeAssignment_1_1");
					put(grammarAccess.getParam_declAccess().getIdentifierAssignment_2(), "rule__Param_decl__IdentifierAssignment_2");
					put(grammarAccess.getReadonly_attr_specAccess().getIsReadonlyAssignment_0_0(), "rule__Readonly_attr_spec__IsReadonlyAssignment_0_0");
					put(grammarAccess.getReadonly_attr_specAccess().getContainedTypeAssignment_0_2_0(), "rule__Readonly_attr_spec__ContainedTypeAssignment_0_2_0");
					put(grammarAccess.getReadonly_attr_specAccess().getSharedTypeAssignment_0_2_1(), "rule__Readonly_attr_spec__SharedTypeAssignment_0_2_1");
					put(grammarAccess.getReadonly_attr_specAccess().getIdentifierAssignment_0_3(), "rule__Readonly_attr_spec__IdentifierAssignment_0_3");
					put(grammarAccess.getReadonly_attr_specAccess().getGetRaisesAssignment_0_6(), "rule__Readonly_attr_spec__GetRaisesAssignment_0_6");
					put(grammarAccess.getReadonly_attr_specAccess().getGetRaisesAssignment_0_7_1(), "rule__Readonly_attr_spec__GetRaisesAssignment_0_7_1");
					put(grammarAccess.getReadonly_attr_specAccess().getIsReadonlyAssignment_1_0(), "rule__Readonly_attr_spec__IsReadonlyAssignment_1_0");
					put(grammarAccess.getReadonly_attr_specAccess().getContainedTypeAssignment_1_2_0(), "rule__Readonly_attr_spec__ContainedTypeAssignment_1_2_0");
					put(grammarAccess.getReadonly_attr_specAccess().getSharedTypeAssignment_1_2_1(), "rule__Readonly_attr_spec__SharedTypeAssignment_1_2_1");
					put(grammarAccess.getReadonly_attr_specAccess().getIdentifierAssignment_1_3(), "rule__Readonly_attr_spec__IdentifierAssignment_1_3");
					put(grammarAccess.getAttr_specAccess().getContainedTypeAssignment_0_1_0(), "rule__Attr_spec__ContainedTypeAssignment_0_1_0");
					put(grammarAccess.getAttr_specAccess().getSharedTypeAssignment_0_1_1(), "rule__Attr_spec__SharedTypeAssignment_0_1_1");
					put(grammarAccess.getAttr_specAccess().getIdentifierAssignment_0_2(), "rule__Attr_spec__IdentifierAssignment_0_2");
					put(grammarAccess.getAttr_specAccess().getGetRaisesAssignment_0_3_0_2(), "rule__Attr_spec__GetRaisesAssignment_0_3_0_2");
					put(grammarAccess.getAttr_specAccess().getGetRaisesAssignment_0_3_0_3_1(), "rule__Attr_spec__GetRaisesAssignment_0_3_0_3_1");
					put(grammarAccess.getAttr_specAccess().getSetRaisesAssignment_0_3_0_5_2(), "rule__Attr_spec__SetRaisesAssignment_0_3_0_5_2");
					put(grammarAccess.getAttr_specAccess().getSetRaisesAssignment_0_3_0_5_3_1(), "rule__Attr_spec__SetRaisesAssignment_0_3_0_5_3_1");
					put(grammarAccess.getAttr_specAccess().getSetRaisesAssignment_0_3_1_2(), "rule__Attr_spec__SetRaisesAssignment_0_3_1_2");
					put(grammarAccess.getAttr_specAccess().getSetRaisesAssignment_0_3_1_3_1(), "rule__Attr_spec__SetRaisesAssignment_0_3_1_3_1");
					put(grammarAccess.getAttr_specAccess().getContainedTypeAssignment_1_1_0(), "rule__Attr_spec__ContainedTypeAssignment_1_1_0");
					put(grammarAccess.getAttr_specAccess().getSharedTypeAssignment_1_1_1(), "rule__Attr_spec__SharedTypeAssignment_1_1_1");
					put(grammarAccess.getAttr_specAccess().getIdentifierAssignment_1_2(), "rule__Attr_spec__IdentifierAssignment_1_2");
					put(grammarAccess.getExcept_declAccess().getIdentifierAssignment_1(), "rule__Except_decl__IdentifierAssignment_1");
					put(grammarAccess.getExcept_declAccess().getMembersAssignment_3(), "rule__Except_decl__MembersAssignment_3");
					put(grammarAccess.getAlias_typeAccess().getContainedTypeAssignment_0_1(), "rule__Alias_type__ContainedTypeAssignment_0_1");
					put(grammarAccess.getAlias_typeAccess().getContainedTypeAssignment_1_1_0(), "rule__Alias_type__ContainedTypeAssignment_1_1_0");
					put(grammarAccess.getAlias_typeAccess().getSharedTypeAssignment_1_1_1(), "rule__Alias_type__SharedTypeAssignment_1_1_1");
					put(grammarAccess.getAlias_typeAccess().getIdentifierAssignment_1_2(), "rule__Alias_type__IdentifierAssignment_1_2");
					put(grammarAccess.getArray_type_specAccess().getContainedTypeAssignment_0_0(), "rule__Array_type_spec__ContainedTypeAssignment_0_0");
					put(grammarAccess.getArray_type_specAccess().getSharedTypeAssignment_0_1(), "rule__Array_type_spec__SharedTypeAssignment_0_1");
					put(grammarAccess.getArray_type_specAccess().getNameAssignment_1(), "rule__Array_type_spec__NameAssignment_1");
					put(grammarAccess.getArray_type_specAccess().getBoundsAssignment_2_1(), "rule__Array_type_spec__BoundsAssignment_2_1");
					put(grammarAccess.getBase_type_specAccess().getKindAssignment_1(), "rule__Base_type_spec__KindAssignment_1");
					put(grammarAccess.getStruct_typeAccess().getIdentifierAssignment_1(), "rule__Struct_type__IdentifierAssignment_1");
					put(grammarAccess.getStruct_typeAccess().getMembersAssignment_3(), "rule__Struct_type__MembersAssignment_3");
					put(grammarAccess.getMemberAccess().getContainedTypeAssignment_0_0(), "rule__Member__ContainedTypeAssignment_0_0");
					put(grammarAccess.getMemberAccess().getContainedTypeAssignment_1_0(), "rule__Member__ContainedTypeAssignment_1_0");
					put(grammarAccess.getMemberAccess().getIdentifierAssignment_1_1(), "rule__Member__IdentifierAssignment_1_1");
					put(grammarAccess.getMemberAccess().getContainedTypeAssignment_2_0(), "rule__Member__ContainedTypeAssignment_2_0");
					put(grammarAccess.getMemberAccess().getIdentifierAssignment_2_1(), "rule__Member__IdentifierAssignment_2_1");
					put(grammarAccess.getMemberAccess().getSharedTypeAssignment_3_0(), "rule__Member__SharedTypeAssignment_3_0");
					put(grammarAccess.getMemberAccess().getIdentifierAssignment_3_1(), "rule__Member__IdentifierAssignment_3_1");
					put(grammarAccess.getUnion_typeAccess().getIdentifierAssignment_1(), "rule__Union_type__IdentifierAssignment_1");
					put(grammarAccess.getUnion_typeAccess().getContainedDiscrimAssignment_4_0(), "rule__Union_type__ContainedDiscrimAssignment_4_0");
					put(grammarAccess.getUnion_typeAccess().getSharedDiscrimAssignment_4_1(), "rule__Union_type__SharedDiscrimAssignment_4_1");
					put(grammarAccess.getUnion_typeAccess().getUnionMembersAssignment_7(), "rule__Union_type__UnionMembersAssignment_7");
					put(grammarAccess.getSwitch_type_spec_contAccess().getKindAssignment_1_1(), "rule__Switch_type_spec_cont__KindAssignment_1_1");
					put(grammarAccess.getSwitch_type_spec_contAccess().getKindAssignment_2_1(), "rule__Switch_type_spec_cont__KindAssignment_2_1");
					put(grammarAccess.getCase_stmtAccess().getLabelAssignment_0_0_0_1(), "rule__Case_stmt__LabelAssignment_0_0_0_1");
					put(grammarAccess.getCase_stmtAccess().getContainedTypeAssignment_0_1(), "rule__Case_stmt__ContainedTypeAssignment_0_1");
					put(grammarAccess.getCase_stmtAccess().getLabelAssignment_1_0_0_1(), "rule__Case_stmt__LabelAssignment_1_0_0_1");
					put(grammarAccess.getCase_stmtAccess().getContainedTypeAssignment_1_1_0(), "rule__Case_stmt__ContainedTypeAssignment_1_1_0");
					put(grammarAccess.getCase_stmtAccess().getSharedTypeAssignment_1_1_1(), "rule__Case_stmt__SharedTypeAssignment_1_1_1");
					put(grammarAccess.getCase_stmtAccess().getIdentifierAssignment_1_2(), "rule__Case_stmt__IdentifierAssignment_1_2");
					put(grammarAccess.getEnum_typeAccess().getIdentifierAssignment_1(), "rule__Enum_type__IdentifierAssignment_1");
					put(grammarAccess.getEnum_typeAccess().getMembersAssignment_3(), "rule__Enum_type__MembersAssignment_3");
					put(grammarAccess.getEnum_typeAccess().getMembersAssignment_4_1(), "rule__Enum_type__MembersAssignment_4_1");
					put(grammarAccess.getEnum_memberAccess().getIdentifierAssignment(), "rule__Enum_member__IdentifierAssignment");
					put(grammarAccess.getConst_declAccess().getContainedTypeAssignment_1_0(), "rule__Const_decl__ContainedTypeAssignment_1_0");
					put(grammarAccess.getConst_declAccess().getSharedTypeAssignment_1_1(), "rule__Const_decl__SharedTypeAssignment_1_1");
					put(grammarAccess.getConst_declAccess().getIdentifierAssignment_2(), "rule__Const_decl__IdentifierAssignment_2");
					put(grammarAccess.getConst_declAccess().getConstValueAssignment_4(), "rule__Const_decl__ConstValueAssignment_4");
					put(grammarAccess.getSequence_typeAccess().getContainedTypeAssignment_2_0(), "rule__Sequence_type__ContainedTypeAssignment_2_0");
					put(grammarAccess.getSequence_typeAccess().getSharedTypeAssignment_2_1(), "rule__Sequence_type__SharedTypeAssignment_2_1");
					put(grammarAccess.getSequence_typeAccess().getBoundAssignment_3_1(), "rule__Sequence_type__BoundAssignment_3_1");
					put(grammarAccess.getStringdef_typeAccess().getBoundAssignment_2(), "rule__Stringdef_type__BoundAssignment_2");
					put(grammarAccess.getWide_stringdef_typeAccess().getBoundAssignment_2(), "rule__Wide_stringdef_type__BoundAssignment_2");
					put(grammarAccess.getFixed_pt_typeAccess().getDigitsAssignment_2(), "rule__Fixed_pt_type__DigitsAssignment_2");
					put(grammarAccess.getFixed_pt_typeAccess().getScaleAssignment_4(), "rule__Fixed_pt_type__ScaleAssignment_4");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_0(), "rule__Floating_pt_type__KindAssignment_0");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_1(), "rule__Floating_pt_type__KindAssignment_1");
					put(grammarAccess.getFloating_pt_typeAccess().getKindAssignment_2(), "rule__Floating_pt_type__KindAssignment_2");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_0(), "rule__Integer_type__KindAssignment_0");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_1(), "rule__Integer_type__KindAssignment_1");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_2(), "rule__Integer_type__KindAssignment_2");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_3(), "rule__Integer_type__KindAssignment_3");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_4(), "rule__Integer_type__KindAssignment_4");
					put(grammarAccess.getInteger_typeAccess().getKindAssignment_5(), "rule__Integer_type__KindAssignment_5");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_0(), "rule__Charstr_type__KindAssignment_0");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_1(), "rule__Charstr_type__KindAssignment_1");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_2(), "rule__Charstr_type__KindAssignment_2");
					put(grammarAccess.getCharstr_typeAccess().getKindAssignment_3(), "rule__Charstr_type__KindAssignment_3");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_0(), "rule__Other_type__KindAssignment_0");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_1(), "rule__Other_type__KindAssignment_1");
					put(grammarAccess.getOther_typeAccess().getKindAssignment_2(), "rule__Other_type__KindAssignment_2");
					put(grammarAccess.getOr_exprAccess().getOperatorAssignment_1_1(), "rule__Or_expr__OperatorAssignment_1_1");
					put(grammarAccess.getOr_exprAccess().getRightAssignment_1_2(), "rule__Or_expr__RightAssignment_1_2");
					put(grammarAccess.getXor_exprAccess().getOperatorAssignment_1_1(), "rule__Xor_expr__OperatorAssignment_1_1");
					put(grammarAccess.getXor_exprAccess().getRightAssignment_1_2(), "rule__Xor_expr__RightAssignment_1_2");
					put(grammarAccess.getAnd_exprAccess().getOperatorAssignment_1_1(), "rule__And_expr__OperatorAssignment_1_1");
					put(grammarAccess.getAnd_exprAccess().getRightAssignment_1_2(), "rule__And_expr__RightAssignment_1_2");
					put(grammarAccess.getShift_exprAccess().getOperatorAssignment_1_1(), "rule__Shift_expr__OperatorAssignment_1_1");
					put(grammarAccess.getShift_exprAccess().getRightAssignment_1_2(), "rule__Shift_expr__RightAssignment_1_2");
					put(grammarAccess.getAdd_exprAccess().getOperatorAssignment_1_1(), "rule__Add_expr__OperatorAssignment_1_1");
					put(grammarAccess.getAdd_exprAccess().getRightAssignment_1_2(), "rule__Add_expr__RightAssignment_1_2");
					put(grammarAccess.getMult_exprAccess().getOperatorAssignment_1_1(), "rule__Mult_expr__OperatorAssignment_1_1");
					put(grammarAccess.getMult_exprAccess().getRightAssignment_1_2(), "rule__Mult_expr__RightAssignment_1_2");
					put(grammarAccess.getUnary_exprAccess().getOperatorAssignment_0_1(), "rule__Unary_expr__OperatorAssignment_0_1");
					put(grammarAccess.getUnary_exprAccess().getExpressionAssignment_0_2(), "rule__Unary_expr__ExpressionAssignment_0_2");
					put(grammarAccess.getConstantDefRefAccess().getConstantAssignment(), "rule__ConstantDefRef__ConstantAssignment");
					put(grammarAccess.getValueExpressionAccess().getValueAssignment(), "rule__ValueExpression__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.csu.idl.xtext.ui.contentassist.antlr.internal.InternalIDLParser typedParser = (org.csu.idl.xtext.ui.contentassist.antlr.internal.InternalIDLParser) parser;
			typedParser.entryRulespecification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public IDLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(IDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
